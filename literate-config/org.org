* Keybindings
#+begin_src emacs-lisp
  (ryo-modal-major-mode-keys
   'org-mode
   ("SPC a" org-agenda)
   ("SPC SPC" org-ctrl-c-ctrl-c)
   ("SPC c i" org-clock-in)
   ("SPC c o" org-clock-out))
#+end_src
*  Looks
     #+begin_src emacs-lisp
	(use-package org-bullets
	  :ensure t
	  :config
	  (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1))))
       
       ;; Display previous level headings for a task
	(setq org-agenda-prefix-format '((agenda . " %i %-12:c%?-12t% s")
	  (timeline . "  % s")
	  (todo .
		" %i %-12:c %(concat \"[ \"(org-format-outline-path (org-get-outline-path)) \" ]\") ")
	  (tags .
		" %i %-12:c %(concat \"[ \"(org-format-outline-path (org-get-outline-path)) \" ]\") ")
	  (search . " %i %-12:c"))
       )
     #+end_src
* Agenda
       #+begin_src emacs-lisp
	 (setq org-agenda-tags-column 77)
	 (setq org-todo-keywords '((sequence "TODO(t)" "EVENT(e)" "IN-PROGRESS(p)" "WAITING(w)"  "|" "CANCELLED(c)" "DONE(d)" "ARCHIVED(a)")))
	 (setq org-agenda-include-diary nil)
	 (setq org-agenda-span 14)
	 (use-package org-agenda-property
	   :ensure t)
	 (setq org-todo-keyword-faces
	       ;; Inspired from Gruvbox dark theme
	       '(("TODO" . (:foreground "#CC241D" :background "#282828" :weight bold :box t))
		 ("EVENT" . (:foreground "#DDDDDD" :background "#282828" :weight bold :box t))
		 ("IN-PROGRESS" . (:foreground "#98971A" :background "#282828" :weight bold :box t))
		 ("WAITING" . (:foreground "#D79921" :background "#282828" :weight bold :box t))
		 ("CANCELLED" . (:foreground "#A89984" :background "#282828" :weight bold  :box t :strike-through t))
		 ("ARCHIVED" .  (:foreground "#A89984" :background "#282828" :weight bold  :box t :strike-through t))
		 ("DONE" . (:foreground "#689D6A" :background "#282828" :weight bold  :box t :strike-through t))))
	 (setq org-fontify-done-headline t)
	 (custom-set-faces
	  '(org-headline-done 
	    ((((class color) (min-colors 16) (background dark)) 
	      (:strike-through t)))))
       #+end_src
* Presentation
	 #+begin_src emacs-lisp
	   (use-package ox-reveal
	     :ensure t)
	   ;; Reveal.js + Org mode
	   (require 'ox-reveal)
	   (setq Org-Reveal-root "file://~/.emacs.d/reveal.js")
	   (setq Org-Reveal-title-slide nil)
	 #+end_src
* Org time format
  #+begin_src emacs-lisp
    (setq format-time-string "%b %d, %Y")
  #+end_src
