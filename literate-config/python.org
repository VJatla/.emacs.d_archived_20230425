* Packages
** Anaconda
#+begin_src emacs-lisp
  (use-package anaconda-mode
    :ensure t
    :config
    (add-hook 'python-mode-hook 'anaconda-mode)
    (add-hook 'python-mode-hook 'anaconda-eldoc-mode))
#+end_src
** pyvenv
#+begin_src emacs-lisp
  (use-package pyvenv
    :ensure t)
#+end_src
** Company-anaconda
#+begin_src emacs-lisp
  (use-package company-anaconda
    :ensure t)
  (eval-after-load "company"
 '(add-to-list 'company-backends 'company-anaconda))
#+end_src
** Blacken
#+begin_src emacs-lisp
  (use-package blacken
    :ensure t)
#+end_src

* Configuration
** Anaconda
** Company anaconda
#+begin_src emacs-lisp
  (eval-after-load "company"
 '(add-to-list 'company-backends 'company-anaconda))
#+end_src
** pyvenv
#+begin_src emacs-lisp
  (setenv "WORKON_HOME" "/home/vj/anaconda3/envs")
#+end_src
* Functions
#+begin_src emacs-lisp
    (defun vj-insert-breakpoint ()
    (interactive)
    (insert "import pdb; pdb.set_trace()"))
#+end_src
* Keybindings
#+begin_src emacs-lisp
   (ryo-modal-major-mode-keys
  'python-mode
  ("SPC e" pyvenv-workon)

  ("SPC b" vj-insert-breakpoint)

  ("SPC f" flycheck-mode)

  ("SPC <" delete-trailing-whitespace)

  ("SPC a f" anaconda-mode-find-definitions)
  )
#+end_src
